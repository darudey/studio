rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read their own data.
    // Admins ('developer', 'shop-owner') can read any user's data.
    // A user can update their own data, but cannot change their own role.
    match /users/{userId} {
      allow read: if request.auth.uid == userId ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['developer', 'shop-owner'];
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId && request.resource.data.role == resource.data.role;
    }

    // Products are publicly readable.
    // Only admins can create, update, or delete products.
    match /products/{productId} {
      allow read: if true;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['developer', 'shop-owner'];
    }

    // Users can read and create their own orders.
    // Admins can read all orders and update their status.
    match /orders/{orderId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read: if request.auth.uid == resource.data.userId ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['developer', 'shop-owner'];
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['developer', 'shop-owner'];
    }
    
    // Developers can read and create coupons.
    // Coupons can NOT be updated by any client; this must be done via the trusted backend flow.
    match /coupons/{couponId} {
      allow read, create: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'developer';
      allow update, delete: if false; // All updates must go through the trusted backend flow
    }
  }
}
