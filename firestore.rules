
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }

    function isRole(role) {
      return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    function isAnyRole(roles) {
      return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in roles;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    match /users/{userId} {
      allow read: if isAnyRole(['developer', 'shop-owner']) || isOwner(userId);
      allow write: if isOwner(userId);
      allow create: if isAuth();
    }

    match /products/{productId} {
      allow read: if true;
      allow create, update, delete: if isAnyRole(['developer', 'shop-owner']);
    }

    match /orders/{orderId} {
      allow get: if isOwner(resource.data.userId) || isAnyRole(['developer', 'shop-owner']);
      allow list: if isAnyRole(['developer', 'shop-owner']);
      allow create: if isAuth();
      allow update: if isAnyRole(['developer', 'shop-owner']);
    }

    match /coupons/{couponId} {
      allow list, read: if isAuth();
      allow update: if isAuth() && resource.data.isUsed == false;
      allow create: if isRole('developer');
    }
  }
}
