rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
    }

    match /products/{productId} {
      allow read;
      allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['developer', 'shop-owner'];
    }

    match /orders/{orderId} {
      // Admins can perform any action on any order.
      allow read, update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['developer', 'shop-owner'];
      
      // A user can create their own order.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      
      // A user can read an order if they are the owner. This covers `get` and constrained `list` queries.
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    match /coupons/{couponId} {
      allow read, create, update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'developer';
    }
  }
}
